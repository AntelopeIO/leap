openapi: 3.0.0
info:
  title: Chain API
  description: Nodeos Chain API Specification. See developer documentation at https://docs.eosnetwork.com for information on enabling this plugin.
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  contact:
    url: https://eosnetwork.com
servers:
  - url: "{protocol}://{host}:{port}/v1/chain"
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      host:
        default: localhost
      port:
        default: "8080"
components:
  schemas: {}
paths:
  /get_account:
    post:
      description: Returns an object containing various details about a specific account on the blockchain.
      operationId: get_account
      requestBody:
        description: JSON Object with single member "account_name"
        content:
          application/json:
            schema:
              type: object
              required:
                - account_name
              properties:
                account_name:
                  $ref: "https://docs.eosnetwork.com/openapi/v2.0/Name.yaml"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "https://docs.eosnetwork.com/openapi/v2.0/Account.yaml"
  /get_block:
    post:
      description: Returns an object containing various details about a specific block on the blockchain.
      operationId: get_block
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - block_num_or_id
              properties:
                block_num_or_id:
                  type: string
                  description: Provide a `block number` or a `block id`
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "https://docs.eosnetwork.com/openapi/v2.0/Block.yaml"
  /get_block_info:
    post:
      description: Similar to `get_block` but returns a fixed-size smaller subset of the block data.
      operationId: get_block_info
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - block_num
              properties:
                block_num:
                  type: integer
                  description: Provide a `block number`
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "https://eosio.github.io/schemata/v2.1/oas/BlockInfo.yaml"
  /get_info:
    post:
      description: Returns an object containing various details about the blockchain.
      operationId: get_info
      security: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "https://docs.eosnetwork.com/openapi/v2.0/Info.yaml"

  /push_transaction:
    post:
      description: This method expects a transaction in JSON format and will attempt to apply it to the blockchain.
      operationId: push_transaction
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                signatures:
                  type: array
                  description: array of signatures required to authorize transaction
                  items:
                    $ref: "https://docs.eosnetwork.com/openapi/v2.0/Signature.yaml"
                compression:
                  type: boolean
                  description: Compression used, usually false
                packed_context_free_data:
                  type: string
                  description: JSON to hex
                packed_trx:
                  type: string
                  description: Transaction object JSON to hex
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: Returns Nothing

  /send_transaction:
    post:
      description: This method expects a transaction in JSON format and will attempt to apply it to the blockchain.
      operationId: send_transaction
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                signatures:
                  type: array
                  description: array of signatures required to authorize transaction
                  items:
                    $ref: "https://docs.eosnetwork.com/openapi/v2.0/Signature.yaml"
                compression:
                  type: boolean
                  description: Compression used, usually false
                packed_context_free_data:
                  type: string
                  description: JSON to hex
                packed_trx:
                  type: string
                  description: Transaction object JSON to hex

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: Returns Nothing

  /push_transactions:
    post:
      description: This method expects a transaction in JSON format and will attempt to apply it to the blockchain.
      operationId: push_transactions
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "https://docs.eosnetwork.com/openapi/v2.0/Transaction.yaml"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: Returns Nothing

  /get_block_header_state:
    post:
      description: Retrieves the glock header state
      operationId: get_block_header_state
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - block_num_or_id
              properties:
                block_num_or_id:
                  type: string
                  description: Provide a block_number or a block_id

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "https://docs.eosnetwork.com/openapi/v2.0/BlockHeaderState.yaml"

  /get_abi:
    post:
      description: Retrieves the ABI for a contract based on its account name
      operationId: get_abi
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - account_name
              properties:
                account_name:
                  $ref: "https://docs.eosnetwork.com/openapi/v2.0/Name.yaml"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "https://docs.eosnetwork.com/openapi/v2.0/Abi.yaml"
  /get_currency_balance:
    post:
      description: Retrieves the current balance
      operationId: get_currency_balance
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - code
                - account
                - symbol
              properties:
                code:
                  $ref: "https://docs.eosnetwork.com/openapi/v2.0/Name.yaml"
                account:
                  $ref: "https://docs.eosnetwork.com/openapi/v2.0/Name.yaml"
                symbol:
                  $ref: "https://docs.eosnetwork.com/openapi/v2.0/Symbol.yaml"

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "https://docs.eosnetwork.com/openapi/v2.0/Symbol.yaml"

  /get_currency_stats:
    post:
      description: Retrieves currency stats
      operationId: get_currency_stats
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  $ref: "https://docs.eosnetwork.com/openapi/v2.0/Name.yaml"
                symbol:
                  $ref: "https://docs.eosnetwork.com/openapi/v2.0/Symbol.yaml"

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: "Returns an object with one member labeled as the symbol you requested, the object has three members: supply (Symbol), max_supply (Symbol) and issuer (Name)"

  /get_required_keys:
    post:
      description: Returns the required keys needed to sign a transaction.
      operationId: get_required_keys
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - transaction
                - available_keys
              properties:
                transaction:
                  $ref: "https://docs.eosnetwork.com/openapi/v2.0/Transaction.yaml"
                available_keys:
                  type: array
                  description: Provide the available keys
                  items:
                    $ref: "https://docs.eosnetwork.com/openapi/v2.0/PublicKey.yaml"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                {}

  /get_producers:
    post:
      description: Retrieves producers list
      operationId: get_producers
      requestBody:
        content:
          application/json:
            schema:
              title: "GetProducersRequest"
              type: object
              required:
                - limit
                - lower_bound
              properties:
                limit:
                  type: string
                  description: total number of producers to retrieve
                lower_bound:
                  type: string
                  description: In conjunction with limit can be used to paginate through the results. For example, limit=10 and lower_bound=10 would be page 2
                json:
                  type: boolean
                  description: return result in JSON format

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                title: "GetProducersResponse"
                type: object
                properties:
                  rows:
                    type: array
                    nullable: true
                    items:
                      $ref: "https://docs.eosnetwork.com/openapi/v2.0/Producer.yaml"
                  total_producer_vote_weight: 
                    type: string
                    description: The sum of all producer votes.
                  more:
                    type: string
                    description: If not all producers were returned with the first request, more contains the lower bound to use for the next request.

  /get_raw_code_and_abi:
    post:
      description: Retrieves raw code and ABI for a contract based on account name
      operationId: get_raw_code_and_abi
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - account_name
              properties:
                account_name:
                  $ref: "https://docs.eosnetwork.com/openapi/v2.0/Name.yaml"

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  account_name:
                    $ref: "https://docs.eosnetwork.com/openapi/v2.0/Name.yaml"
                  wasm:
                    type: string
                    description: base64 encoded wasm
                  abi:
                    type: string
                    description: base64 encoded ABI

  /get_scheduled_transactions:
    post:
      description: Retrieves scheduled transactions
      operationId: get_scheduled_transactions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                lower_bound:
                  $ref: "https://docs.eosnetwork.com/openapi/v2.0/DateTimeSeconds.yaml"
                limit:
                  description: The maximum number of transactions to return
                  type: integer
                json:
                  description: true/false whether the packed transaction is converted to json
                  type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      $ref: "https://docs.eosnetwork.com/openapi/v2.0/Transaction.yaml"


  /get_table_by_scope:
    post:
      description: Retrieves table scope
      operationId: get_table_by_scope
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - code
              properties:
                code:
                  type: string
                  description: "`name` of the contract to return table data for"
                table:
                  type: string
                  description: Filter results by table
                lower_bound:
                  type: string
                  description: Filters results to return the first element that is not less than provided value in set
                upper_bound:
                  type: string
                  description: Filters results to return the first element that is greater than provided value in set
                limit:
                  type: integer
                  description: Limit number of results returned.
                  format: int32
                  default: 10
                reverse:
                  type: boolean
                  description: Reverse the order of returned results
                  default: false
                show_payer:
                  type: boolean
                  description: Show RAM payer
                  default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items:
                      $ref: "https://docs.eosnetwork.com/openapi/v2.0/TableScope.yaml"
                  more:
                    $ref: "https://docs.eosnetwork.com/openapi/v2.0/Name.yaml"

  /get_table_rows:
    post:
      description: Returns an object containing rows from the specified table.
      operationId: get_table_rows
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - code
                - table
                - scope
              properties:
                code:
                  type: string
                  description: The name of the smart contract that controls the provided table
                table:
                  type: string
                  description: The name of the table to query
                scope:
                  type: string
                  description: The account to which this data belongs
                index_position:
                  type: string
                  description: Position of the index used, accepted parameters `primary`, `secondary`, `tertiary`, `fourth`, `fifth`, `sixth`, `seventh`, `eighth`, `ninth` , `tenth`
                key_type:
                  type: string
                  description: Type of key specified by index_position (for example - `uint64_t` or `name`)
                encode_type:
                  type: string
                lower_bound:
                  type: string
                  description: Filters results to return the first element that is not less than provided value in set
                upper_bound:
                  type: string
                  description: Filters results to return the first element that is greater than provided value in set
                limit:
                  type: integer
                  description: Limit number of results returned.
                  format: int32
                  default: 10
                reverse:
                  type: boolean
                  description: Reverse the order of returned results
                  default: false
                show_payer:
                  type: boolean
                  description: Show RAM payer
                  default: false

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  rows:
                    type: array
                    items: {}

  /get_code:
    post:
      description: Returns an object containing the smart contract WASM code.
      operationId: get_code
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - account_name
                - code_as_wasm
              properties:
                account_name:
                  $ref: "https://docs.eosnetwork.com/openapi/v2.0/Name.yaml"
                code_as_wasm:
                  type: integer
                  default: 1
                  description: This must be 1 (true)
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: GetCodeResponse.yaml
                properties:
                  name:
                    $ref: "https://docs.eosnetwork.com/openapi/v2.0/Name.yaml"
                  code_hash:
                    $ref: "https://docs.eosnetwork.com/openapi/v2.0/Sha256.yaml"
                  wast:
                    type: string
                  wasm:
                    type: string
                  abi:
                    $ref: "https://docs.eosnetwork.com/openapi/v2.0/Abi.yaml"

  /get_raw_abi:
    post:
      description: Returns an object containing the smart contract abi.
      operationId: get_raw_abi
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - account_name
              properties:
                account_name:
                  $ref: "https://docs.eosnetwork.com/openapi/v2.0/Name.yaml"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  account_name:
                    $ref: "https://docs.eosnetwork.com/openapi/v2.0/Name.yaml"
                  code_hash:
                    $ref: "https://docs.eosnetwork.com/openapi/v2.0/Sha256.yaml"
                  abi_hash:
                    allOf:
                      - $ref: "https://docs.eosnetwork.com/openapi/v2.0/Sha256.yaml"
                  abi:
                    type: string


  /get_activated_protocol_features:
    post:
      description: Retreives the activated protocol features for producer node
      operationId: get_activated_protocol_features
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                 lower_bound:
                   type: integer
                   description: Lower bound
                 upper_bound:
                   type: integer
                   description: Upper bound
                 limit:
                   type: integer
                   description: The limit, default is 10
                 search_by_block_num:
                   type: boolean
                   description: Flag to indicate it is has to search by block number
                 reverse:
                   type: boolean
                   description: Flag to indicate it has to search in reverse
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Returns activated protocol features
                required:
                  - activated_protocol_features
                properties:
                  activated_protocol_features:
                    type: array
                    description: Variant type, an array of strings with the activated protocol features
                    items:
                      type: string
                  more:
                    type: integer
                    description: "In case there's more activated protocol features than the input parameter `limit` requested, returns the ordinal of the next activated protocol feature which was not returned, otherwise zero."
  /get_accounts_by_authorizers:
    post:
      description: Given a set of account names and public keys, find all account permission authorities that are, in part or whole, satisfiable
      operationId: get_accounts_by_authorizers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accounts:
                  type: array
                  description: List of authorizing accounts and/or actor/permissions
                  items:
                    anyOf:
                      - $ref: "https://docs.eosnetwork.com/openapi/v2.0/Name.yaml"
                      - $ref: "https://docs.eosnetwork.com/openapi/v2.0/Authority.yaml"
                keys:
                  type: array
                  description: List of authorizing keys
                  items:
                    $ref: "https://docs.eosnetwork.com/openapi/v2.0/PublicKey.yaml"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Result containing a list of accounts which are authorized, in whole or part, by the provided accounts and keys
                required:
                  - accounts
                properties:
                  accounts:
                    type: array
                    description: An array of each account,permission,authorizing-data triplet in the response
                    items:
                      type: object
                      description: the information for a single account,permission,authorizing-data triplet
                      required:
                        - account_name
                        - permission_name
                        - authorizer
                        - weight
                        - threshold
                      properties:
                        account_name:
                          $ref: "https://docs.eosnetwork.com/openapi/v2.0/Name.yaml"
                        permission_name:
                          $ref: "https://docs.eosnetwork.com/openapi/v2.0/Name.yaml"
                        authorizer:
                          oneOf:
                            - $ref: "https://docs.eosnetwork.com/openapi/v2.0/PublicKey.yaml"
                            - $ref: "https://docs.eosnetwork.com/openapi/v2.0/Authority.yaml"
                        weight:
                          type: "integer"
                          description: the weight that this authorizer adds to satisfy the permission
                        threshold:
                          type: "integer"
                          description: the sum of weights that must be met or exceeded to satisfy the permission
  /get_transaction_status:
    post:
      description: Attempts to get current blockchain state and, if available, transaction information given the transaction id. For query to work, the transaction finality status feature must be enabled by configuring the chain plugin with the config option '--transaction-finality-status-max-storage-size-gb' in nodeos.
      operationId: get_transaction_status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: string
                  description: The transaction ID of the transaction to retrieve the status for. 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "https://docs.eosnetwork.com/openapi/v2.0/TransactionStatus.yaml"

  /send_transaction2:
    post:
      description: Attempts to apply a transaction to the blockchain specified in JSON format. It supports returning the full trace of a failed transaction and automatic nodeos-mediated retry if it is enabled on the node. When transaction retry is enabled on an API node, it will monitor incoming API transactions and ensure they are resubmitted additional times into the P2P network until they expire or are included in a block. Warning, full failure traces are now returned by default instead of exceptions. Be careful to not confuse a returned trace as an indication of speculative execution success. Verify 'receipt' and 'except' fields of the returned trace.
      operationId: send_transaction2
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                return_failure_trace:
                  type: boolean
                  description: If true, then embed transaction exceptions into the returned transaction trace.
                retry_trx:
                  type: boolean
                  description: If true, requests to retry transaction until gets in a block of given height, see retry_trx_num_blocks as well, or it is irreversible or expires.
                retry_trx_num_blocks:
                  type: integer
                  description: If retry_trx is true, requests to retry transaction until in a block of given height, or lib if not specified.
                transaction:
                  type: object
                  properties:
                    signatures:
                      type: array
                      description: array of signatures required to authorize transaction.
                      items:
                        $ref: "https://docs.eosnetwork.com/openapi/v2.0/Signature.yaml"
                    compression:
                      type: boolean
                      description: Compression used, usually false
                    packed_context_free_data:
                      type: string
                      description: JSON to hex
                    packed_trx:
                      type: string
                      description: Transaction object JSON to hex
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: Returns Nothing

  /compute_transaction:
    post:
      description: Executes specified transaction and creates a transaction trace, including resource usage, and then reverts all state changes but not contribute to the subjective billing for the account. If the transaction has signatures, they are processed, but any failures are ignored. Transactions which fail always include the transaction failure trace. Warning, users with exposed nodes who have enabled the compute_transaction endpoint should implement some throttling to protect from Denial of Service attacks.
      operationId: compute_transaction
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                signatures:
                  type: array
                  description: array of signatures required to authorize transaction
                  items:
                    $ref: "https://docs.eosnetwork.com/openapi/v2.0/Signature.yaml"
                compression:
                  type: boolean
                  description: Compression used, usually false
                packed_context_free_data:
                  type: string
                  description: JSON to hex
                packed_trx:
                  type: string
                  description: Transaction object, JSON to hex
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: Returns Nothing

  /get_code_hash:
    post:
      description: Retrieves the code hash for a smart contract deployed on the blockchain. Once you have the code hash of a contract, you can compare it with a known or expected value to ensure that the contract code has not been modified or tampered with.
      operationId: get_code_hash
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                account_name:
                  description: The name of the account for which you want to retrieve the code hash. It represents the account that owns the smart contract code.
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  account_name:
                    description: The name of the account where the smart contract was deployed.
                    type: string
                  code_hash:
                    type: string
                    description: A string that represents the hash value of the specified account's smart contract code.

  /get_transaction_id:
    post:
      description: Retrieves the transaction ID (also known as the transaction hash) of a specified transaction on the blockchain.
      operationId: get_transaction_id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: The transaction in JSON format for which the ID should be retrieved.
              $ref: "https://docs.eosnetwork.com/openapi/v2.0/Transaction.yaml"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                description: The transaction ID.

  /get_producer_schedule:
    post:
      description: Retrieves the current producer schedule from the blockchain, which includes the list of active producers and their respective rotation schedule.
      operationId: get_producer_schedule
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  active:
                    description: A JSON object that encapsulates the list of active producers schedule and its version.
                    $ref: "https://docs.eosnetwork.com/openapi/v2.0/ProducerSchedule.yaml"                              
                  pending:
                    description: A JSON object that encapsulates the list of pending producers schedule and its version.
                    $ref: "https://docs.eosnetwork.com/openapi/v2.0/ProducerSchedule.yaml"
                  proposed:
                    description: A JSON object that encapsulates the list of proposed producers schedule and its version.
                    $ref: "https://docs.eosnetwork.com/openapi/v2.0/ProducerSchedule.yaml"

  /send_read_only_transaction:
    post:
      description: Sends a read-only transaction in JSON format to the blockchain. This transaction is not intended for inclusion in the blockchain. When a user sends a transaction, which modifies the blockchain state, the connected node will fail the transaction.
      operationId: send_read_only_transaction
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction:
                  type: object
                  properties:
                    compression:
                      type: boolean
                      description: Compression used, usually false
                    packed_context_free_data:
                      type: string
                      description: JSON to hex
                    packed_trx:
                      type: string
                      description: Transaction object JSON to hex
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: Returns Nothing

  /push_block:
    post:
      description: Sends a block to the blockchain.
      operationId: push_block
      requestBody:
        content:
          application/json:
            schema:
              $ref: "https://docs.eosnetwork.com/openapi/v2.0/Block.yaml"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: Returns Nothing